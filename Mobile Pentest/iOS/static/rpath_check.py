import subprocess
import sys
import os

def check_rpath(binary_path):
    if not os.path.isfile(binary_path):
        print(f"[!] File not found: {binary_path}")
        return

    try:
        # Run rabin2 to extract linked libraries
        result = subprocess.run(["rabin2", "-l", binary_path], capture_output=True, text=True)
        output = result.stdout

        if "@rpath" in output:
            print(f"\n🧩 Binary: {os.path.basename(binary_path)}")
            print("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
            print("📌 Libraries using @rpath:")
            print("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
            for line in output.splitlines():
                if "@rpath" in line:
                    print("➤", line.strip())
        else:
            print(f"✅ {os.path.basename(binary_path)}: No @rpath usage detected.")

    except Exception as e:
        print(f"[!] Error while processing {binary_path}: {e}")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python3 check_rpath.py <binary_path>")
        sys.exit(1)

    binary = sys.argv[1]
    check_rpath(binary)
